<Page
    x:Class="Screenbox.Pages.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors"
    xmlns:commands="using:Screenbox.Commands"
    xmlns:converters="using:Screenbox.Converters"
    xmlns:ctc="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Screenbox.Core.Helpers"
    xmlns:interactions="using:Screenbox.Controls.Interactions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:storage="using:Windows.Storage"
    xmlns:strings="using:Screenbox.Strings"
    xmlns:triggers="using:CommunityToolkit.WinUI"
    xmlns:ui="using:CommunityToolkit.WinUI"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <x:Double x:Key="ToggleSwitchPreContentMargin">4</x:Double>
            <x:Double x:Key="ToggleSwitchPostContentMargin">4</x:Double>
            <Thickness x:Key="SettingsCardMargin">0,0,0,4</Thickness>

            <!--  Section Header text style  -->
            <Style
                x:Key="SettingsSectionHeaderTextBlockStyle"
                BasedOn="{StaticResource BodyStrongTextBlockStyle}"
                TargetType="TextBlock">
                <Setter Property="Margin" Value="1,28,0,8" />
                <Setter Property="AutomationProperties.HeadingLevel" Value="Level2" />
            </Style>

            <ThemeShadow x:Key="SharedShadow" />
            <converters:ResourceNameToResourceStringConverter x:Key="ResourceNameToResourceStringConverter" />

            <XamlUICommand
                x:Key="RemoveMusicFolderCommand"
                Command="{x:Bind ViewModel.RemoveMusicFolderCommand}"
                Description="{strings:Resources Key=RemoveFolder}"
                IconSource="{ui:FontIconSource Glyph=&#xE894;}"
                Label="{strings:Resources Key=Remove}" />

            <XamlUICommand
                x:Key="RemoveVideosFolderCommand"
                Command="{x:Bind ViewModel.RemoveVideosFolderCommand}"
                Description="{strings:Resources Key=RemoveFolder}"
                IconSource="{ui:FontIconSource Glyph=&#xE894;}"
                Label="{strings:Resources Key=Remove}" />

            <DataTemplate x:Key="VideosLibraryLocationTemplate" x:DataType="storage:StorageFolder">
                <ctc:SettingsCard Description="{x:Bind Path}" Header="{x:Bind DisplayName}">
                    <Button
                        Width="32"
                        Height="32"
                        Padding="0"
                        VerticalAlignment="Center"
                        Command="{StaticResource RemoveVideosFolderCommand}"
                        CommandParameter="{x:Bind}"
                        Style="{StaticResource SubtleButtonStyle}">
                        <FontIcon Glyph="&#xE894;" />
                    </Button>
                </ctc:SettingsCard>
            </DataTemplate>

            <DataTemplate x:Key="MusicLibraryLocationTemplate" x:DataType="storage:StorageFolder">
                <ctc:SettingsCard Description="{x:Bind Path}" Header="{x:Bind DisplayName}">
                    <Button
                        Width="32"
                        Height="32"
                        Padding="0"
                        VerticalAlignment="Center"
                        Command="{StaticResource RemoveMusicFolderCommand}"
                        CommandParameter="{x:Bind}"
                        Style="{StaticResource SubtleButtonStyle}">
                        <FontIcon Glyph="&#xE894;" />
                    </Button>
                </ctc:SettingsCard>
            </DataTemplate>

            <DataTemplate x:Key="RemovableStorageFolderTemplate" x:DataType="storage:StorageFolder">
                <ctc:SettingsCard Description="{x:Bind Path}" Header="{x:Bind DisplayName}" />
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>

    <interactivity:Interaction.Behaviors>
        <interactions:AutoFocusBehavior />
    </interactivity:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid
            x:Name="HeaderGrid"
            Grid.Row="0"
            MinHeight="{StaticResource PageHeaderMinHeight}"
            Margin="{StaticResource BottomMediumMargin}"
            Padding="{StaticResource ContentPagePadding}">
            <TextBlock
                x:Name="HeaderText"
                Style="{StaticResource PageHeaderTextBlockStyle}"
                Text="{strings:Resources Key=Settings}" />
        </Grid>

        <ScrollViewer
            Grid.Row="1"
            ui:ScrollViewerExtensions.VerticalScrollBarMargin="{x:Bind Common.ScrollBarMargin, Mode=OneWay}"
            HorizontalScrollMode="Disabled">
            <StackPanel
                x:Name="ContentRoot"
                Margin="{x:Bind Common.FooterBottomPaddingMargin, Mode=OneWay}"
                Padding="{StaticResource ContentPagePadding}">
                <StackPanel.ChildrenTransitions>
                    <EntranceThemeTransition FromVerticalOffset="50" IsStaggeringEnabled="True" />
                    <RepositionThemeTransition IsStaggeringEnabled="False" />
                </StackPanel.ChildrenTransitions>
                <interactivity:Interaction.Behaviors>
                    <interactions:BringIntoViewWithOffsetBehavior FromBottom="{x:Bind Common.FooterBottomPaddingHeight, Mode=OneWay}" />
                </interactivity:Interaction.Behaviors>

                <!--  Libraries section  -->
                <TextBlock
                    Margin="1,8,0,8"
                    Style="{StaticResource SettingsSectionHeaderTextBlockStyle}"
                    Text="{strings:Resources Key=SettingsCategoryLibraries}" />
                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsSearchRemovableStorageDescription}"
                    Header="{strings:Resources Key=SettingsSearchRemovableStorageHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE88E;}"
                    ItemTemplate="{StaticResource RemovableStorageFolderTemplate}"
                    ItemsSource="{x:Bind ViewModel.RemovableStorageFolders}"
                    Visibility="{x:Bind helpers:SystemInformation.IsXbox}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior XYFocusRight="{x:Bind SearchRemovableStorageToggle}" />
                    </interactivity:Interaction.Behaviors>
                    <ToggleSwitch x:Name="SearchRemovableStorageToggle" IsOn="{x:Bind ViewModel.SearchRemovableStorage, Mode=TwoWay}" />
                </ctc:SettingsExpander>
                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{x:Bind strings:Resources.LocationSpecified(ViewModel.MusicLocations.Count), Mode=OneWay, FallbackValue={x:Null}}"
                    Header="{strings:Resources Key=SettingsMusicLibraryLocationsHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE8D6;}"
                    ItemTemplate="{StaticResource MusicLibraryLocationTemplate}"
                    ItemsSource="{x:Bind ViewModel.MusicLocations}"
                    Visibility="{x:Bind helpers:SystemInformation.IsDesktop}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior XYFocusRight="{x:Bind AddMusicFolderButton}" />
                    </interactivity:Interaction.Behaviors>
                    <Button
                        x:Name="AddMusicFolderButton"
                        AutomationProperties.Name="{strings:Resources Key=AddFolder}"
                        Command="{x:Bind ViewModel.AddMusicFolderCommand}"
                        ToolTipService.ToolTip="{strings:Resources Key=AddMusicFolderToolTip}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE8F4;" />
                            <TextBlock Margin="8,0,0,0" Text="{strings:Resources Key=AddFolder}" />
                        </StackPanel>
                    </Button>
                </ctc:SettingsExpander>
                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{x:Bind strings:Resources.LocationSpecified(ViewModel.VideoLocations.Count), Mode=OneWay, FallbackValue={x:Null}}"
                    Header="{strings:Resources Key=SettingsVideoLibraryLocationsHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE8B2;}"
                    ItemTemplate="{StaticResource VideosLibraryLocationTemplate}"
                    ItemsSource="{x:Bind ViewModel.VideoLocations}"
                    Visibility="{x:Bind helpers:SystemInformation.IsDesktop}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior XYFocusRight="{x:Bind AddVideoFolderButton}" />
                    </interactivity:Interaction.Behaviors>
                    <Button
                        x:Name="AddVideoFolderButton"
                        AutomationProperties.Name="{strings:Resources Key=AddFolder}"
                        Command="{x:Bind ViewModel.AddVideosFolderCommand}"
                        ToolTipService.ToolTip="{strings:Resources Key=AddVideoFolderToolTip}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE8F4;" />
                            <TextBlock Margin="8,0,0,0" Text="{strings:Resources Key=AddFolder}" />
                        </StackPanel>
                    </Button>
                </ctc:SettingsExpander>
                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Header="{strings:Resources Key=RefreshLibraries}"
                    HeaderIcon="{ui:SymbolIcon Symbol=Repair}"
                    Visibility="{x:Bind helpers:SystemInformation.IsDesktop}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior XYFocusRight="{x:Bind RefreshLibrariesButton}" />
                    </interactivity:Interaction.Behaviors>
                    <Button
                        x:Name="RefreshLibrariesButton"
                        AutomationProperties.Name="{strings:Resources Key=Refresh}"
                        Command="{x:Bind ViewModel.RefreshLibrariesCommand}"
                        Content="{strings:Resources Key=Refresh}" />
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard ContentAlignment="Left">
                            <StackPanel Orientation="Vertical">
                                <CheckBox Content="{strings:Resources Key=SettingsUseIndexerHeader}" IsChecked="{x:Bind ViewModel.UseIndexer, Mode=TwoWay}" />
                                <TextBlock
                                    Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="{strings:Resources Key=SettingsUseIndexerDescription}"
                                    TextWrapping="Wrap" />
                            </StackPanel>
                        </ctc:SettingsCard>
                        <ctc:SettingsCard CornerRadius="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}">
                            <ctc:SettingsCard.Header>
                                <HyperlinkButton
                                    Margin="{StaticResource HyperlinkButtonInlineMargin}"
                                    Content="{strings:Resources Key=ManageSystemIndexingLink}"
                                    NavigateUri="ms-settings:search" />
                            </ctc:SettingsCard.Header>
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                </ctc:SettingsExpander>

                <!--  General section  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{strings:Resources Key=SettingsCategoryGeneral}" />
                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsShowRecentDescription}"
                    Header="{strings:Resources Key=SettingsShowRecentHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE8B7;}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior XYFocusRight="{x:Bind ShowRecentToggleSwitch}" />
                    </interactivity:Interaction.Behaviors>
                    <ToggleSwitch x:Name="ShowRecentToggleSwitch" IsOn="{x:Bind ViewModel.ShowRecent, Mode=TwoWay}" />
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard CornerRadius="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" Header="{strings:Resources Key=SettingsClearRecentHeader}">
                            <Button Command="{x:Bind ViewModel.ClearRecentHistoryCommand}" Content="{strings:Resources Key=Clear}" />
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                </ctc:SettingsExpander>

                <!--  Player section  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{strings:Resources Key=SettingsCategoryPlayer}" />
                <ctc:SettingsCard
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsAutoResizeDescription}"
                    Header="{strings:Resources Key=SettingsAutoResizeHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE799;}"
                    Visibility="{x:Bind helpers:SystemInformation.IsDesktop}">
                    <ComboBox MinWidth="150" SelectedIndex="{x:Bind ViewModel.PlayerAutoResize, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="x:String">
                                <TextBlock Text="{x:Bind Converter={StaticResource ResourceNameToResourceStringConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <x:String>Always</x:String>
                        <x:String>OnLaunch</x:String>
                        <x:String>Never</x:String>
                    </ComboBox>
                </ctc:SettingsCard>
                <ctc:SettingsCard
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsVolumeBoostDescription}"
                    Header="{strings:Resources Key=SettingsVolumeBoostHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE767;}">
                    <ComboBox MinWidth="150" SelectedIndex="{x:Bind ViewModel.VolumeBoost, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="x:String">
                                <TextBlock Text="{x:Bind Converter={StaticResource ResourceNameToResourceStringConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <x:String>None</x:String>
                        <x:String>#125%</x:String>
                        <x:String>#150%</x:String>
                        <x:String>#200%</x:String>
                    </ComboBox>
                </ctc:SettingsCard>
                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Header="{strings:Resources Key=SettingsGesturesHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xEDA4;}"
                    Visibility="{x:Bind helpers:SystemInformation.IsXbox, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard Header="{strings:Resources Key=SettingsGestureSeek}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.PlayerSeekGesture, Mode=TwoWay}" />
                        </ctc:SettingsCard>
                        <ctc:SettingsCard Header="{strings:Resources Key=SettingsGestureVolume}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.PlayerVolumeGesture, Mode=TwoWay}" />
                        </ctc:SettingsCard>
                        <ctc:SettingsCard CornerRadius="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" Header="{strings:Resources Key=SettingsGestureTap}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.PlayerTapGesture, Mode=TwoWay}" />
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                </ctc:SettingsExpander>

                <!--  Advanced section  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{strings:Resources Key=SettingsCategoryAdvanced}" />
                <ctc:SettingsCard
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsUseMultipleInstancesDescription}"
                    Header="{strings:Resources Key=SettingsUseMultipleInstancesHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE737;}"
                    Visibility="{x:Bind helpers:SystemInformation.IsDesktop}">
                    <ToggleSwitch x:Name="UseMultipleInstancesToggleSwitch" IsOn="{x:Bind ViewModel.UseMultipleInstances, Mode=TwoWay}" />
                </ctc:SettingsCard>
                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsAdvancedModeDescription}"
                    Header="{strings:Resources Key=SettingsAdvancedModeHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE756;}"
                    IsExpanded="{x:Bind AdvancedModeToggleSwitch.IsOn, Mode=OneWay}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior XYFocusRight="{x:Bind AdvancedModeToggleSwitch}" />
                    </interactivity:Interaction.Behaviors>
                    <ToggleSwitch x:Name="AdvancedModeToggleSwitch" IsOn="{x:Bind ViewModel.AdvancedMode, Mode=TwoWay}" />
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard Header="{strings:Resources Key=SettingsGlobalArgumentsHeader}" IsEnabled="{x:Bind AdvancedModeToggleSwitch.IsOn, Mode=OneWay}">
                            <ctc:SettingsCard.Description>
                                <TextBlock>
                                    <Run Text="{strings:Resources Key=SettingsGlobalArgumentsDescription}" /><LineBreak /><Run Text="{x:Bind VlcCommandLineHelpTextParts[0]}" />
                                    <Hyperlink NavigateUri="https://wiki.videolan.org/VLC_command-line_help/">
                                        <Run Text="{strings:Resources Key=VlcCommandLineHelpLink}" />
                                    </Hyperlink>
                                    <Run Text="{x:Bind VlcCommandLineHelpTextParts[1]}" />
                                </TextBlock>
                            </ctc:SettingsCard.Description>
                            <Button CommandParameter="{x:Bind ViewModel}" Content="{strings:Resources Key=SetArguments}">
                                <Button.Command>
                                    <commands:SetPlaybackOptionsCommand />
                                </Button.Command>
                            </Button>
                        </ctc:SettingsCard>
                        <ctc:SettingsCard
                            CornerRadius="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
                            Header="Active arguments"
                            IsEnabled="{x:Bind AdvancedModeToggleSwitch.IsOn, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.GlobalArguments, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}}">
                            <ctc:SettingsCard.Description>
                                <TextBlock IsTextSelectionEnabled="True" Text="{x:Bind ViewModel.GlobalArguments, Mode=OneWay}" />
                            </ctc:SettingsCard.Description>
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                </ctc:SettingsExpander>

                <!--  About section  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{strings:Resources Key=SettingsCategoryAbout}" />
                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="Made with ❤️ by Tung Huynh"
                    Header="{strings:Resources Key=AppFriendlyName}"
                    HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/Square44x44Logo.scale-200.png}">
                    <TextBlock
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        IsTextSelectionEnabled="True"
                        Text="{x:Bind strings:Resources.VersionText}" />
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard
                            HorizontalContentAlignment="Left"
                            ContentAlignment="Vertical"
                            CornerRadius="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}">
                            <StackPanel Margin="{StaticResource HyperlinkButtonInlineMargin}" Orientation="Vertical">
                                <!--  TODO: Add third-party license notice  -->
                                <HyperlinkButton Content="{strings:Resources Key=PrivacyPolicy}" NavigateUri="https://github.com/huynhsontung/Screenbox/blob/main/PRIVACY.md" />
                                <HyperlinkButton Content="{strings:Resources Key=License}" NavigateUri="https://github.com/huynhsontung/Screenbox/blob/main/LICENSE" />
                                <HyperlinkButton Content="{strings:Resources Key=HyperlinkSourceCode}" NavigateUri="https://github.com/huynhsontung/Screenbox" />
                            </StackPanel>
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                </ctc:SettingsExpander>

                <StackPanel Margin="-11,4,0,28" Orientation="Vertical">
                    <HyperlinkButton Content="{strings:Resources Key=HyperlinkDiscord}" NavigateUri="https://discord.gg/HZPZXjANxz" />
                    <HyperlinkButton Content="{strings:Resources Key=HyperlinkSponsor}" NavigateUri="https://github.com/sponsors/huynhsontung" />
                    <HyperlinkButton Content="{strings:Resources Key=HyperlinkTranslate}" NavigateUri="https://crowdin.com/project/screenbox" />
                </StackPanel>

            </StackPanel>
        </ScrollViewer>

        <muxc:InfoBar
            x:Name="PendingChangesInfoBar"
            Title="{strings:Resources Key=PendingChanges}"
            Grid.Row="0"
            Grid.RowSpan="2"
            Margin="{StaticResource ContentPagePadding}"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            IsClosable="False"
            IsOpen="{x:Bind ViewModel.IsRelaunchRequired, Mode=OneWay}"
            Message="{strings:Resources Key=RelaunchForChangesMessage}"
            Severity="Warning"
            Shadow="{StaticResource SharedShadow}">
            <muxc:InfoBar.Transitions>
                <RepositionThemeTransition />
            </muxc:InfoBar.Transitions>
        </muxc:InfoBar>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="NavigationViewStates">
                <VisualState x:Name="Expanded" />
                <VisualState x:Name="Compact" />
                <VisualState x:Name="Minimal">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind Common.NavigationViewDisplayMode, Mode=OneWay}">
                            <triggers:IsEqualStateTrigger.To>
                                <muxc:NavigationViewDisplayMode>Minimal</muxc:NavigationViewDisplayMode>
                            </triggers:IsEqualStateTrigger.To>
                        </triggers:IsEqualStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGrid.Padding" Value="{StaticResource ContentPageMinimalPadding}" />
                        <Setter Target="ContentRoot.Padding" Value="{StaticResource ContentPageMinimalPadding}" />
                        <Setter Target="PendingChangesInfoBar.MaxWidth" Value="360" />
                        <Setter Target="PendingChangesInfoBar.Margin" Value="{StaticResource ContentPageMinimalPadding}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
