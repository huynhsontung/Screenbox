<Page
    x:Class="Screenbox.Pages.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:class="using:Screenbox"
    xmlns:commands="using:Screenbox.Commands"
    xmlns:contract13Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,13)"
    xmlns:controls="using:Screenbox.Controls"
    xmlns:converters="using:Screenbox.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:ctBehaviors="using:CommunityToolkit.WinUI.Behaviors"
    xmlns:ctc="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Screenbox.Core.Helpers"
    xmlns:interactions="using:Screenbox.Controls.Interactions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:storage="using:Windows.Storage"
    xmlns:strings="using:Screenbox.Strings"
    xmlns:triggers="using:CommunityToolkit.WinUI"
    xmlns:ui="using:CommunityToolkit.WinUI"
    d:DesignHeight="1472"
    d:DesignWidth="848"
    XYFocusDownNavigationStrategy="NavigationDirectionDistance"
    XYFocusUpNavigationStrategy="NavigationDirectionDistance"
    mc:Ignorable="d">

    <Page.Resources>
        <!--<x:Double x:Key="SettingsCardActionIconMaxSize">14</x:Double>-->
        <Thickness x:Key="SettingsCardMargin">0,0,0,4</Thickness>

        <converters:ResourceNameToResourceStringConverter x:Key="ResourceNameToResourceStringConverter" />

        <!--  Section header text style  -->
        <Style
            x:Key="SettingsSectionHeaderTextBlockStyle"
            BasedOn="{StaticResource BaseTextBlockStyle}"
            TargetType="TextBlock">
            <Setter Property="Margin" Value="1,28,0,8" />
            <Setter Property="AutomationProperties.HeadingLevel" Value="Level2" />
        </Style>

        <!--  SettingsCard for the related links footer, with a darker background, reduced left padding, increased minimum height and vertical padding  -->
        <Style x:Key="LinksSettingsExpanderItemStyle" TargetType="ctc:SettingsCard">
            <Style.Setters>
                <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorSecondaryBrush}" />
                <Setter Property="BorderThickness" Value="0,1,0,0" />
                <Setter Property="MinHeight" Value="56" />
                <Setter Property="Padding" Value="18,10,44,12" />
                <Setter Property="CornerRadius" Value="0" />
            </Style.Setters>
        </Style>

        <XamlUICommand
            x:Key="RemoveVideosFolderCommand"
            Command="{x:Bind ViewModel.RemoveVideosFolderCommand}"
            Description="{strings:Resources Key=RemoveFolder}" />

        <XamlUICommand
            x:Key="RemoveMusicFolderCommand"
            Command="{x:Bind ViewModel.RemoveMusicFolderCommand}"
            Description="{strings:Resources Key=RemoveFolder}" />

        <DataTemplate x:Key="VideosLibraryLocationTemplate" x:DataType="storage:StorageFolder">
            <ctc:SettingsCard Description="{x:Bind Path}" Header="{x:Bind DisplayName}">
                <Button
                    Width="32"
                    Height="32"
                    Padding="0"
                    Command="{StaticResource RemoveVideosFolderCommand}"
                    CommandParameter="{x:Bind}"
                    Style="{StaticResource SubtleButtonStyle}">
                    <FontIcon Glyph="&#xE894;" />
                </Button>
            </ctc:SettingsCard>
        </DataTemplate>

        <DataTemplate x:Key="MusicLibraryLocationTemplate" x:DataType="storage:StorageFolder">
            <ctc:SettingsCard Description="{x:Bind Path}" Header="{x:Bind DisplayName}">
                <Button
                    Width="32"
                    Height="32"
                    Padding="0"
                    Command="{StaticResource RemoveMusicFolderCommand}"
                    CommandParameter="{x:Bind}"
                    Style="{StaticResource SubtleButtonStyle}">
                    <FontIcon Glyph="&#xE894;" />
                </Button>
            </ctc:SettingsCard>
        </DataTemplate>

        <DataTemplate x:Key="RemovableStorageFolderTemplate" x:DataType="storage:StorageFolder">
            <ctc:SettingsCard Description="{x:Bind Path}" Header="{x:Bind DisplayName}" />
        </DataTemplate>
    </Page.Resources>

    <interactivity:Interaction.Behaviors>
        <interactions:AutoFocusBehavior />
    </interactivity:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid
            x:Name="HeaderGrid"
            Grid.Row="0"
            MinHeight="{StaticResource PageHeaderMinHeight}"
            Margin="{StaticResource BottomMediumMargin}"
            Padding="{StaticResource ContentPagePadding}">
            <TextBlock
                x:Name="HeaderText"
                Style="{StaticResource TitleMediumTextBlockStyle}"
                Text="{strings:Resources Key=Settings}" />
        </Grid>

        <ScrollViewer
            Grid.Row="1"
            ui:ScrollViewerExtensions.VerticalScrollBarMargin="{x:Bind Common.ScrollBarMargin, Mode=OneWay}"
            HorizontalScrollMode="Disabled">
            <StackPanel
                x:Name="ContentRoot"
                Margin="{x:Bind Common.FooterBottomPaddingMargin, Mode=OneWay}"
                Padding="{StaticResource ContentPagePadding}">
                <StackPanel.ChildrenTransitions>
                    <TransitionCollection>
                        <EntranceThemeTransition FromVerticalOffset="50" IsStaggeringEnabled="True" />
                        <RepositionThemeTransition IsStaggeringEnabled="False" />
                    </TransitionCollection>
                </StackPanel.ChildrenTransitions>
                <interactivity:Interaction.Behaviors>
                    <interactions:BringIntoViewWithOffsetBehavior FromBottom="{x:Bind Common.FooterBottomPaddingHeight, Mode=OneWay}" />
                </interactivity:Interaction.Behaviors>

                <!--  Libraries section  -->
                <TextBlock
                    Margin="1,8,0,8"
                    Style="{StaticResource SettingsSectionHeaderTextBlockStyle}"
                    Text="{strings:Resources Key=SettingsCategoryLibraries}" />

                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsSearchRemovableStorageDescription}"
                    Header="{strings:Resources Key=SettingsSearchRemovableStorageHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE88E;}"
                    ItemTemplate="{StaticResource RemovableStorageFolderTemplate}"
                    ItemsSource="{x:Bind ViewModel.RemovableStorageFolders}"
                    Visibility="{x:Bind helpers:SystemInformation.IsXbox}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior />
                    </interactivity:Interaction.Behaviors>
                    <ToggleSwitch
                        x:Name="SearchRemovableStorageToggle"
                        AutomationProperties.HelpText="{strings:Resources Key=SettingsSearchRemovableStorageDescription}"
                        IsOn="{x:Bind ViewModel.SearchRemovableStorage, Mode=TwoWay}" />
                </ctc:SettingsExpander>

                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{x:Bind strings:Resources.LocationSpecified(ViewModel.MusicLocations.Count), Mode=OneWay, FallbackValue={x:Null}}"
                    Header="{strings:Resources Key=SettingsMusicLibraryLocationsHeader}"
                    HeaderIcon="{ui:FontIcon FontFamily={StaticResource ScreenboxSymbolThemeFontFamily},
                                             Glyph={StaticResource AudioGlyph}}"
                    ItemTemplate="{StaticResource MusicLibraryLocationTemplate}"
                    ItemsSource="{x:Bind ViewModel.MusicLocations}"
                    Visibility="{x:Bind helpers:SystemInformation.IsDesktop}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior />
                    </interactivity:Interaction.Behaviors>
                    <Button
                        x:Name="AddMusicFolderButton"
                        AutomationProperties.HelpText="{x:Bind AddMusicFolderButton.(ToolTipService.ToolTip)}"
                        AutomationProperties.Name="{strings:Resources Key=AddFolder}"
                        Command="{x:Bind ViewModel.AddMusicFolderCommand}"
                        ToolTipService.ToolTip="{strings:Resources Key=AddMusicFolderToolTip}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon
                                x:Name="SettingsExpanderAddMusicFolderButtonIcon"
                                Margin="{StaticResource IconButtonStandardIconMargin}"
                                FontFamily="{StaticResource ScreenboxSymbolThemeFontFamily}"
                                Glyph="{StaticResource NewFolderGlyph}" />
                            <TextBlock Margin="8,0,0,0" Text="{strings:Resources Key=AddFolder}" />
                        </StackPanel>
                    </Button>
                </ctc:SettingsExpander>

                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{x:Bind strings:Resources.LocationSpecified(ViewModel.VideoLocations.Count), Mode=OneWay, FallbackValue={x:Null}}"
                    Header="{strings:Resources Key=SettingsVideoLibraryLocationsHeader}"
                    HeaderIcon="{ui:FontIcon FontFamily={StaticResource ScreenboxSymbolThemeFontFamily},
                                             Glyph={StaticResource MoviesGlyph}}"
                    ItemTemplate="{StaticResource VideosLibraryLocationTemplate}"
                    ItemsSource="{x:Bind ViewModel.VideoLocations}"
                    Visibility="{x:Bind helpers:SystemInformation.IsDesktop}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior />
                    </interactivity:Interaction.Behaviors>
                    <Button
                        x:Name="AddVideoFolderButton"
                        AutomationProperties.HelpText="{x:Bind AddVideoFolderButton.(ToolTipService.ToolTip)}"
                        AutomationProperties.Name="{strings:Resources Key=AddFolder}"
                        Command="{x:Bind ViewModel.AddVideosFolderCommand}"
                        ToolTipService.ToolTip="{strings:Resources Key=AddVideoFolderToolTip}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon
                                x:Name="SettingsExpanderAddVideoFolderButtonIcon"
                                Margin="{StaticResource IconButtonStandardIconMargin}"
                                FontFamily="{StaticResource ScreenboxSymbolThemeFontFamily}"
                                Glyph="{StaticResource NewFolderGlyph}" />
                            <TextBlock Margin="8,0,0,0" Text="{strings:Resources Key=AddFolder}" />
                        </StackPanel>
                    </Button>
                </ctc:SettingsExpander>

                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Header="{strings:Resources Key=RefreshLibraries}"
                    HeaderIcon="{ui:SymbolIcon Symbol=Repair}"
                    Visibility="{x:Bind helpers:SystemInformation.IsDesktop}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior />
                    </interactivity:Interaction.Behaviors>
                    <Button
                        x:Name="RefreshLibrariesButton"
                        Command="{x:Bind ViewModel.RefreshLibrariesCommand}"
                        Content="{strings:Resources Key=Refresh}" />
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard ContentAlignment="Left">
                            <StackPanel Orientation="Vertical">
                                <CheckBox
                                    AutomationProperties.FullDescription="{x:Bind SettingsUseIndexerDescriptionText.Text}"
                                    Content="{strings:Resources Key=SettingsUseIndexerHeader}"
                                    IsChecked="{x:Bind ViewModel.UseIndexer, Mode=TwoWay}" />
                                <TextBlock
                                    x:Name="SettingsUseIndexerDescriptionText"
                                    Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="{strings:Resources Key=SettingsUseIndexerDescription}" />
                            </StackPanel>
                        </ctc:SettingsCard>
                        <ctc:SettingsCard
                            ActionIcon="{ui:FontIcon Glyph=&#xE8A7;,
                                                     MirroredWhenRightToLeft=True}"
                            Header="{strings:Resources Key=ManageSystemIndexingLink}"
                            IsClickEnabled="True">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Click">
                                    <ctBehaviors:NavigateToUriAction NavigateUri="ms-settings:search" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                </ctc:SettingsExpander>

                <!--  General section  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{strings:Resources Key=SettingsCategoryGeneral}" />

                <ctc:SettingsCard
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsThemeSelectionDescription}"
                    Header="{strings:Resources Key=SettingsThemeSelectionHeader}"
                    HeaderIcon="{ui:FontIcon FontFamily={StaticResource ScreenboxSymbolThemeFontFamily},
                                             Glyph={StaticResource FiltersGlyph}}">
                    <ComboBox MinWidth="150" SelectedIndex="{x:Bind ViewModel.Theme, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="x:String">
                                <TextBlock Text="{x:Bind Converter={StaticResource ResourceNameToResourceStringConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <x:String>Auto</x:String>
                        <x:String>Light</x:String>
                        <x:String>Dark</x:String>
                    </ComboBox>
                </ctc:SettingsCard>

                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsShowRecentDescription}"
                    Header="{strings:Resources Key=SettingsShowRecentHeader}"
                    HeaderIcon="{ui:FontIcon FontFamily={StaticResource ScreenboxSymbolThemeFontFamily},
                                             Glyph={StaticResource FolderGlyph}}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior />
                    </interactivity:Interaction.Behaviors>
                    <ToggleSwitch
                        x:Name="ShowRecentToggleSwitch"
                        AutomationProperties.HelpText="{strings:Resources Key=SettingsShowRecentDescription}"
                        IsOn="{x:Bind ViewModel.ShowRecent, Mode=TwoWay}" />
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard
                            x:Name="SettingsClearRecentCard"
                            AutomationProperties.Name="{x:Bind SettingsClearRecentCard.Header}"
                            Header="{strings:Resources Key=SettingsClearRecentHeader}">
                            <Button Command="{x:Bind ViewModel.ClearRecentHistoryCommand}" Content="{strings:Resources Key=Clear}" />
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                </ctc:SettingsExpander>

                <ctc:SettingsCard
                    x:Name="SettingsEnqueueAllFilesInFolderCard"
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsEnqueueAllFilesInFolderDescription}"
                    Header="{strings:Resources Key=SettingsEnqueueAllFilesInFolderHeader}"
                    HeaderIcon="{ui:FontIcon FontFamily={StaticResource ScreenboxSymbolThemeFontFamily},
                                             Glyph={StaticResource FolderListGlyph}}">
                    <ToggleSwitch AutomationProperties.HelpText="{x:Bind SettingsEnqueueAllFilesInFolderCard.Description}" IsOn="{x:Bind ViewModel.EnqueueAllFilesInFolder, Mode=TwoWay}" />
                </ctc:SettingsCard>

                <!--  Player section  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{strings:Resources Key=SettingsCategoryPlayer}" />

                <ctc:SettingsCard
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsAutoResizeDescription}"
                    Header="{strings:Resources Key=SettingsAutoResizeHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE799;}"
                    Visibility="{x:Bind helpers:SystemInformation.IsDesktop}">
                    <ComboBox
                        MinWidth="150"
                        AutomationProperties.HelpText="{strings:Resources Key=SettingsAutoResizeDescription}"
                        SelectedIndex="{x:Bind ViewModel.PlayerAutoResize, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="x:String">
                                <TextBlock Text="{x:Bind Converter={StaticResource ResourceNameToResourceStringConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <x:String>Always</x:String>
                        <x:String>OnLaunch</x:String>
                        <x:String>Never</x:String>
                    </ComboBox>
                </ctc:SettingsCard>

                <ctc:SettingsCard
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsVolumeBoostDescription}"
                    Header="{strings:Resources Key=SettingsVolumeBoostHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE767;,
                                             MirroredWhenRightToLeft=True}">
                    <ComboBox
                        MinWidth="150"
                        AutomationProperties.HelpText="{strings:Resources Key=SettingsVolumeBoostDescription}"
                        SelectedIndex="{x:Bind ViewModel.VolumeBoost, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="x:String">
                                <TextBlock Text="{x:Bind Converter={StaticResource ResourceNameToResourceStringConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <x:String>None</x:String>
                        <x:String>#125%</x:String>
                        <x:String>#150%</x:String>
                        <x:String>#200%</x:String>
                    </ComboBox>
                </ctc:SettingsCard>

                <ctc:SettingsCard
                    Margin="{StaticResource SettingsCardMargin}"
                    Header="{strings:Resources Key=SettingsShowControlsHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE75B;}">
                    <ToggleSwitch x:Name="ShowControlsToggleSwitch" IsOn="{x:Bind ViewModel.PlayerShowControls, Mode=TwoWay}" />
                </ctc:SettingsCard>

                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Header="{strings:Resources Key=SettingsGesturesHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xEDA4;}"
                    Visibility="{x:Bind helpers:SystemInformation.IsXbox, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=true}">
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard Header="{strings:Resources Key=SettingsGestureSeek}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.PlayerSeekGesture, Mode=TwoWay}" />
                        </ctc:SettingsCard>
                        <ctc:SettingsCard Header="{strings:Resources Key=SettingsGestureVolume}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.PlayerVolumeGesture, Mode=TwoWay}" />
                        </ctc:SettingsCard>
                        <ctc:SettingsCard Header="{strings:Resources Key=SettingsGestureTap}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.PlayerTapGesture, Mode=TwoWay}" />
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                </ctc:SettingsExpander>

                <ctc:SettingsExpander
                    x:Name="SettingsAudioVisualExpander"
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsAudioVisualDescription}"
                    Header="{strings:Resources Key=SettingsAudioVisualHeader}"
                    HeaderIcon="{ui:FontIcon FontFamily={StaticResource ScreenboxSymbolThemeFontFamily},
                                             Glyph={StaticResource MusicVisualizerGlyph}}">
                    <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}" Text="{x:Bind AudioVisualSelector.ViewModel.SelectedVisualizer.Model.Title, Mode=OneWay, FallbackValue={x:Null}}" />
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard ContentAlignment="Left">
                            <controls:LivelyWallpaperSelector x:Name="AudioVisualSelector" />
                        </ctc:SettingsCard>
                        <ctc:SettingsCard
                            x:Name="SettingsImportVisualsCard"
                            AutomationProperties.Name="{x:Bind SettingsImportVisualsCard.Header}"
                            Description="{strings:Resources Key=SettingsImportVisualsDescription}"
                            Header="{strings:Resources Key=SettingsImportVisualsHeader}">
                            <Button Command="{x:Bind AudioVisualSelector.ViewModel.BrowseVisualizerCommand}" Content="{strings:Resources Key=BrowseFiles}" />
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                    <ctc:SettingsExpander.ItemsFooter>
                        <ctc:SettingsCard
                            AutomationProperties.Name="{x:Bind SettingsRelatedLinksText.Text}"
                            ContentAlignment="Left"
                            Style="{StaticResource LinksSettingsExpanderItemStyle}">
                            <Grid ColumnSpacing="12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    x:Name="SettingsRelatedLinksText"
                                    Margin="0,6,0,0"
                                    AutomationProperties.HeadingLevel="Level4"
                                    Style="{StaticResource BodyStrongTextBlockStyle}"
                                    Text="{strings:Resources Key=RelatedLinks}" />

                                <ctc:WrapPanel Grid.Column="1" Orientation="Horizontal">
                                    <HyperlinkButton
                                        Content="{strings:Resources Key=GetLivelyApp}"
                                        NavigateUri="https://www.rocksdanister.com/lively"
                                        Visibility="{x:Bind helpers:SystemInformation.IsDesktop}" />
                                    <HyperlinkButton Content="{strings:Resources Key=GetLivelyVisuals}" NavigateUri="https://github.com/rocksdanister/audio-visualizer-wallpaper" />
                                </ctc:WrapPanel>
                            </Grid>
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.ItemsFooter>
                </ctc:SettingsExpander>

                <!--  Advanced section  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{strings:Resources Key=SettingsCategoryAdvanced}" />

                <ctc:SettingsCard
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsUseMultipleInstancesDescription}"
                    Header="{strings:Resources Key=SettingsUseMultipleInstancesHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xF5ED;,
                                             MirroredWhenRightToLeft=True}"
                    Visibility="{x:Bind helpers:SystemInformation.IsDesktop}">
                    <ToggleSwitch
                        x:Name="UseMultipleInstancesToggleSwitch"
                        AutomationProperties.HelpText="{strings:Resources Key=SettingsUseMultipleInstancesDescription}"
                        IsOn="{x:Bind ViewModel.UseMultipleInstances, Mode=TwoWay}" />
                </ctc:SettingsCard>

                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="{strings:Resources Key=SettingsAdvancedModeDescription}"
                    Header="{strings:Resources Key=SettingsAdvancedModeHeader}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE756;}"
                    IsExpanded="{x:Bind AdvancedModeToggleSwitch.IsOn, Mode=OneWay}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:SettingsExpanderXYNavigationBehavior />
                    </interactivity:Interaction.Behaviors>
                    <ToggleSwitch
                        x:Name="AdvancedModeToggleSwitch"
                        AutomationProperties.HelpText="{strings:Resources Key=SettingsAdvancedModeDescription}"
                        IsOn="{x:Bind ViewModel.AdvancedMode, Mode=TwoWay}" />
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard
                            x:Name="SettingsGlobalArgumentsCard"
                            AutomationProperties.Name="{x:Bind SettingsGlobalArgumentsCard.Header}"
                            Description="{strings:Resources Key=SettingsGlobalArgumentsDescription}"
                            Header="{strings:Resources Key=SettingsGlobalArgumentsHeader}"
                            IsEnabled="{x:Bind AdvancedModeToggleSwitch.IsOn, Mode=OneWay}">
                            <Button CommandParameter="{x:Bind ViewModel}" Content="{strings:Resources Key=SetArguments}">
                                <Button.Command>
                                    <commands:SetPlaybackOptionsCommand />
                                </Button.Command>
                            </Button>
                        </ctc:SettingsCard>
                        <ctc:SettingsCard
                            Header="{strings:Resources Key=ActiveArguments}"
                            IsEnabled="{x:Bind AdvancedModeToggleSwitch.IsOn, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.GlobalArguments, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}}">
                            <ctc:SettingsCard.Description>
                                <TextBlock IsTextSelectionEnabled="True" Text="{x:Bind ViewModel.GlobalArguments, Mode=OneWay}" />
                            </ctc:SettingsCard.Description>
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                </ctc:SettingsExpander>

                <!--  About section  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{strings:Resources Key=SettingsCategoryAbout}" />

                <ctc:SettingsExpander
                    Margin="{StaticResource SettingsCardMargin}"
                    Description="Made with ❤️ by Tung Huynh"
                    Header="{strings:Resources Key=AppFriendlyName}"
                    HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/StoreLogo.png}">
                    <TextBlock
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        IsTextSelectionEnabled="True"
                        Text="{x:Bind strings:Resources.VersionText}" />
                    <ctc:SettingsExpander.Items>
                        <ctc:SettingsCard HorizontalContentAlignment="Left" ContentAlignment="Vertical">
                            <StackPanel Margin="{StaticResource HyperlinkButtonInlineMargin}" Orientation="Vertical">
                                <HyperlinkButton Content="{strings:Resources Key=PrivacyPolicy}" NavigateUri="https://github.com/huynhsontung/Screenbox/blob/main/PRIVACY.md" />
                                <HyperlinkButton Content="{strings:Resources Key=License}" NavigateUri="https://github.com/huynhsontung/Screenbox/blob/main/LICENSE" />
                                <HyperlinkButton Content="{strings:Resources Key=ThirdPartyNotices}" NavigateUri="https://github.com/huynhsontung/Screenbox/blob/main/NOTICE.md" />
                                <HyperlinkButton Content="{strings:Resources Key=HyperlinkSourceCode}" NavigateUri="https://github.com/huynhsontung/Screenbox" />
                            </StackPanel>
                        </ctc:SettingsCard>
                    </ctc:SettingsExpander.Items>
                </ctc:SettingsExpander>

                <StackPanel
                    Margin="0,8,0,28"
                    Padding="{StaticResource HyperlinkButtonInlineMargin}"
                    Orientation="Vertical"
                    XYFocusKeyboardNavigation="Enabled">
                    <HyperlinkButton Content="{strings:Resources Key=HyperlinkDiscord}" NavigateUri="https://discord.gg/HZPZXjANxz" />
                    <HyperlinkButton Content="{strings:Resources Key=HyperlinkSponsor}" NavigateUri="https://github.com/sponsors/huynhsontung" />
                    <HyperlinkButton Content="{strings:Resources Key=HyperlinkTranslate}" NavigateUri="https://crowdin.com/project/screenbox" />
                </StackPanel>

            </StackPanel>
        </ScrollViewer>

        <muxc:InfoBar
            x:Name="PendingChangesInfoBar"
            Title="{strings:Resources Key=PendingChanges}"
            Grid.Row="0"
            Grid.RowSpan="2"
            Margin="{StaticResource ContentPagePadding}"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            IsClosable="False"
            IsOpen="{x:Bind ViewModel.IsRelaunchRequired, Mode=OneWay}"
            Message="{strings:Resources Key=RelaunchForChangesMessage}"
            Severity="Warning"
            Shadow="{StaticResource ElevationThemeShadow}">
            <muxc:InfoBar.Transitions>
                <TransitionCollection>
                    <RepositionThemeTransition />
                </TransitionCollection>
            </muxc:InfoBar.Transitions>
        </muxc:InfoBar>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="NavigationViewStates">
                <VisualState x:Name="Expanded" />
                <VisualState x:Name="Compact" />
                <VisualState x:Name="Minimal">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind Common.NavigationViewDisplayMode, Mode=OneWay}">
                            <triggers:IsEqualStateTrigger.To>
                                <muxc:NavigationViewDisplayMode>Minimal</muxc:NavigationViewDisplayMode>
                            </triggers:IsEqualStateTrigger.To>
                        </triggers:IsEqualStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGrid.Padding" Value="{StaticResource ContentPageMinimalPadding}" />
                        <Setter Target="ContentRoot.Padding" Value="{StaticResource ContentPageMinimalPadding}" />
                        <Setter Target="PendingChangesInfoBar.MaxWidth" Value="360" />
                        <Setter Target="PendingChangesInfoBar.Margin" Value="{StaticResource ContentPageMinimalPadding}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="FlowDirectionStates">
                <VisualState x:Name="LeftToRight" />

                <VisualState x:Name="RightToLeft">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind class:App.IsRightToLeftLanguage}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <contract13Present:Setter Target="SettingsExpanderAddMusicFolderButtonIcon.Glyph" Value="{StaticResource NewFolderMirroredGlyph}" />
                        <contract13Present:Setter Target="SettingsExpanderAddVideoFolderButtonIcon.Glyph" Value="{StaticResource NewFolderMirroredGlyph}" />
                        <Setter Target="SettingsEnqueueAllFilesInFolderCard.HeaderIcon" Value="{ui:FontIcon FontFamily={StaticResource ScreenboxSymbolThemeFontFamily}, Glyph={StaticResource FolderListMirroredGlyph}}" />
                        <Setter Target="SettingsAudioVisualExpander.HeaderIcon" Value="{ui:FontIcon FontFamily={StaticResource ScreenboxSymbolThemeFontFamily}, Glyph={StaticResource MusicVisualizerMirroredGlyph}}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
