<Page
    x:Class="Screenbox.Pages.SongSearchResultPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="using:Screenbox.Controls.Extensions"
    xmlns:interactions="using:Screenbox.Controls.Interactions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:strings="using:Screenbox.Strings"
    xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Controls/Templates/MediaListViewItem.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock
            x:Name="HeaderText"
            Grid.Row="0"
            Margin="{StaticResource ContentPageHeaderMargin}"
            MaxLines="2"
            Style="{StaticResource PageHeaderTextBlockStyle}"
            Text="{x:Bind strings:Resources.SearchResultSongHeader(ViewModel.SearchQuery), FallbackValue={}}" />

        <ListView
            x:Name="SongListView"
            Grid.Row="1"
            Padding="{StaticResource ContentPageRightMargin}"
            extensions:ListViewExtensions.ItemCornerRadius="8"
            extensions:ListViewExtensions.ItemMargin="0,2,0,2"
            ui:ListViewExtensions.ItemContainerStretchDirection="Horizontal"
            ui:ScrollViewerExtensions.VerticalScrollBarMargin="{x:Bind Common.ScrollBarMargin, Mode=OneWay}"
            ItemTemplate="{StaticResource MediaListViewItemWithoutMediaIconTemplate}"
            ItemsSource="{x:Bind ViewModel.SearchResult.Songs, FallbackValue={x:Null}}"
            SelectionMode="None">
            <ListView.Resources>
                <XamlUICommand x:Key="MediaListViewItemPlayCommand" Command="{x:Bind ViewModel.PlaySongCommand, FallbackValue={x:Null}}" />
            </ListView.Resources>
            <ListView.Footer>
                <Grid Height="{x:Bind Common.FooterBottomPaddingHeight, Mode=OneWay}" />
            </ListView.Footer>
            <interactivity:Interaction.Behaviors>
                <interactions:AlternatingListViewBehavior
                    AlternateBackground="{ThemeResource AccentListViewItemBackgroundBrush}"
                    AlternateBorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    AlternateBorderThickness="1" />
                <!-- <interactions:ListViewContextTriggerBehavior Flyout="{x:Bind ItemFlyout}" /> -->
            </interactivity:Interaction.Behaviors>
        </ListView>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="NavigationViewStates">
                <VisualState x:Name="Expanded" />
                <VisualState x:Name="Compact" />
                <VisualState x:Name="Minimal">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind Common.NavigationViewDisplayMode, Mode=OneWay}">
                            <triggers:IsEqualStateTrigger.To>
                                <muxc:NavigationViewDisplayMode>Minimal</muxc:NavigationViewDisplayMode>
                            </triggers:IsEqualStateTrigger.To>
                        </triggers:IsEqualStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderText.Margin" Value="{StaticResource ContentPageHeaderMarginMinimal}" />
                        <Setter Target="SongListView.Padding" Value="{StaticResource ContentPageRightMarginMinimal}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
