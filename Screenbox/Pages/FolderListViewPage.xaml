<Page
    x:Class="Screenbox.Pages.FolderListViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Behaviors"
    xmlns:commands="using:Screenbox.Commands"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="using:Screenbox.Controls.Extensions"
    xmlns:interactions="using:Screenbox.Controls.Interactions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:strings="using:Screenbox.Strings"
    xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:viewModels1="using:Screenbox.Core.ViewModels"
    mc:Ignorable="d">
    <Page.Resources>
        <MenuFlyout x:Name="ItemFlyout">
            <MenuFlyoutItem
                Command="{x:Bind ViewModel.PlayCommand}"
                CommandParameter="{Binding}"
                Icon="{ui:SymbolIcon Symbol=Play}"
                Text="{strings:Resources Key=Play}" />
            <MenuFlyoutItem
                Command="{x:Bind ViewModel.PlayNextCommand}"
                CommandParameter="{Binding}"
                Icon="{ui:FontIcon FontFamily={StaticResource ScreenboxCustomIconsFontFamily},
                                   Glyph=B}"
                Text="{strings:Resources Key=PlayNext}" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                Command="{StaticResource ShowPropertiesCommand}"
                CommandParameter="{Binding Media}"
                Icon="{ui:FontIcon Glyph=&#xe946;}"
                Text="{strings:Resources Key=Properties}" />
            <MenuFlyoutSeparator Visibility="{x:Bind Common.IsAdvancedModeEnabled}" />
            <MenuFlyoutItem
                CommandParameter="{Binding}"
                Icon="{ui:SymbolIcon Symbol=Setting}"
                Text="{strings:Resources Key=SetPlaybackOptions}"
                Visibility="{x:Bind Common.IsAdvancedModeEnabled}">
                <MenuFlyoutItem.Command>
                    <commands:SetPlaybackOptionsCommand PlayCommand="{x:Bind ViewModel.PlayCommand}" />
                </MenuFlyoutItem.Command>
            </MenuFlyoutItem>
        </MenuFlyout>

        <DataTemplate x:Key="StorageItemListViewItemTemplate" x:DataType="viewModels1:StorageItemViewModel">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" MinWidth="54" />
                </Grid.ColumnDefinitions>

                <FontIcon
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    FontSize="16"
                    Glyph="{x:Bind StorageItem, Converter={StaticResource MediaGlyphConverter}}" />
                <TextBlock
                    Grid.Column="1"
                    Margin="0,0,16,0"
                    MaxLines="1"
                    Style="{StaticResource CaptionTextBlockStyle}"
                    Text="{x:Bind Name}" />
                <TextBlock
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    MaxLines="1"
                    Style="{StaticResource CaptionTextBlockStyle}"
                    Text="{x:Bind CaptionText, Mode=OneWay}" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <muxc:ProgressBar
            x:Name="LoadingProgressBar"
            Margin="{StaticResource ContentPageRightMargin}"
            VerticalAlignment="Top"
            IsIndeterminate="True"
            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
        <ListView
            x:Name="ListView"
            Padding="{StaticResource ContentPageRightMargin}"
            extensions:ListViewExtensions.ItemCornerRadius="8"
            extensions:ListViewExtensions.ItemMargin="0,2,0,2"
            ui:ListViewExtensions.Command="{x:Bind ViewModel.ClickCommand}"
            ui:ListViewExtensions.ItemContainerStretchDirection="Horizontal"
            ui:ScrollViewerExtensions.VerticalScrollBarMargin="{x:Bind Common.ScrollBarMargin, Mode=OneWay}"
            IsItemClickEnabled="True"
            ItemTemplate="{StaticResource StorageItemListViewItemTemplate}"
            ItemsSource="{x:Bind ViewModel.Items}"
            SelectionMode="None">
            <interactivity:Interaction.Behaviors>
                <behaviors:AutoFocusBehavior />
                <interactions:AlternatingListViewBehavior
                    AlternateBackground="{ThemeResource AccentListViewItemBackgroundBrush}"
                    AlternateBorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    AlternateBorderThickness="1" />
                <interactions:ListViewContextTriggerBehavior ContextRequested="FolderView_OnItemContextRequested" Flyout="{x:Bind ItemFlyout}" />
                <interactions:BringIntoViewWithOffsetBehavior FromBottom="{x:Bind Common.FooterBottomPaddingHeight, Mode=OneWay}" />
                <interactions:FocusOnItemClickBehavior />
            </interactivity:Interaction.Behaviors>
            <ListView.Footer>
                <Border Height="{x:Bind Common.FooterBottomPaddingHeight, Mode=OneWay}" />
            </ListView.Footer>
        </ListView>

        <TextBlock
            x:Name="NoContentText"
            Margin="{StaticResource ContentPageRightMargin}"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Text="{x:Bind strings:Resources.EmptyFolder}"
            Visibility="{x:Bind ViewModel.IsEmpty, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="NavigationViewStates">
                <VisualState x:Name="Expanded" />
                <VisualState x:Name="Compact" />
                <VisualState x:Name="Minimal">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind Common.NavigationViewDisplayMode, Mode=OneWay}">
                            <triggers:IsEqualStateTrigger.To>
                                <muxc:NavigationViewDisplayMode>Minimal</muxc:NavigationViewDisplayMode>
                            </triggers:IsEqualStateTrigger.To>
                        </triggers:IsEqualStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LoadingProgressBar.Margin" Value="{StaticResource ContentPageRightMarginMinimal}" />
                        <Setter Target="ListView.Padding" Value="{StaticResource ContentPageRightMarginMinimal}" />
                        <Setter Target="NoContentText.Margin" Value="{StaticResource ContentPageRightMarginMinimal}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
