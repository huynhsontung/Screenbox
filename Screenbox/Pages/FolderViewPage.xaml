<Page
    x:Class="Screenbox.Pages.FolderViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:commands="using:Screenbox.Commands"
    xmlns:controls="using:Screenbox.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactions="using:Screenbox.Controls.Interactions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:Screenbox.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:storage="using:Windows.Storage"
    xmlns:strings="using:Screenbox.Strings"
    xmlns:triggers="using:CommunityToolkit.WinUI"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:viewModels="using:Screenbox.Core.ViewModels"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Controls/Styles/CustomGridViewItem.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <MenuFlyout x:Name="ItemFlyout">
                <MenuFlyoutItem
                    Command="{x:Bind ViewModel.PlayCommand}"
                    CommandParameter="{Binding}"
                    Icon="{ui:SymbolIcon Symbol=Play}"
                    Text="{strings:Resources Key=Play}" />
                <MenuFlyoutItem
                    Command="{x:Bind ViewModel.PlayNextCommand}"
                    CommandParameter="{Binding}"
                    Icon="{ui:FontIcon FontFamily={StaticResource ScreenboxSymbolThemeFontFamily},
                                       Glyph=&#xF5EB;}"
                    Text="{strings:Resources Key=PlayNext}" />
                <MenuFlyoutSeparator />
                <MenuFlyoutItem
                    Command="{StaticResource ShowPropertiesCommand}"
                    CommandParameter="{Binding Media}"
                    Icon="{ui:FontIcon Glyph=&#xE946;}"
                    Text="{strings:Resources Key=Properties}" />
                <MenuFlyoutSeparator Visibility="{x:Bind Common.IsAdvancedModeEnabled}" />
                <MenuFlyoutItem
                    CommandParameter="{Binding}"
                    Icon="{ui:SymbolIcon Symbol=Setting}"
                    Text="{strings:Resources Key=SetPlaybackOptions}"
                    Visibility="{x:Bind Common.IsAdvancedModeEnabled}">
                    <MenuFlyoutItem.Command>
                        <commands:SetPlaybackOptionsCommand PlayCommand="{x:Bind ViewModel.PlayCommand}" />
                    </MenuFlyoutItem.Command>
                </MenuFlyoutItem>
            </MenuFlyout>

            <DataTemplate x:Key="BreadcrumbItemTemplate" x:DataType="storage:StorageFolder">
                <muxc:BreadcrumbBarItem AutomationProperties.Name="{x:Bind DisplayName}" Content="{x:Bind DisplayName}" />
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock
            x:Name="TitleText"
            Grid.Row="0"
            MinHeight="{StaticResource PageHeaderMinHeight}"
            Margin="{StaticResource BottomMediumMargin}"
            Padding="{StaticResource PageContentMargin}"
            Style="{StaticResource PageHeaderTextBlockStyle}"
            Text="{x:Bind ViewModel.TitleText}" />

        <muxc:BreadcrumbBar
            x:Name="BreadcrumbBar"
            Grid.Row="1"
            Margin="{StaticResource PageContentMargin}"
            ItemClicked="BreadcrumbBar_OnItemClicked"
            ItemTemplate="{StaticResource BreadcrumbItemTemplate}"
            ItemsSource="{x:Bind ViewModel.Breadcrumbs}" />

        <muxc:ProgressBar
            Grid.Row="2"
            Margin="0,4,0,0"
            VerticalAlignment="Top"
            IsIndeterminate="True"
            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
        <GridView
            x:Name="FolderView"
            Grid.Row="2"
            Margin="{StaticResource TopLargeMargin}"
            Padding="{StaticResource PageThumbnailMargin}"
            ui:ListViewExtensions.Command="{x:Bind ViewModel.ClickCommand}"
            ui:ScrollViewerExtensions.VerticalScrollBarMargin="{x:Bind Common.ScrollBarMargin, Mode=OneWay}"
            IsItemClickEnabled="True"
            ItemsSource="{x:Bind ViewModel.Items}"
            Loaded="FolderView_OnLoaded"
            SelectionMode="None">
            <GridView.Resources>
                <commands:BindableCommand x:Key="MediaListViewItemPlayCommand" Command="{x:Bind ViewModel.PlayCommand}" />
            </GridView.Resources>
            <GridView.ItemTemplate>
                <DataTemplate x:DataType="viewModels:StorageItemViewModel">
                    <controls:CommonGridViewItem
                        Width="{StaticResource WideGridViewItemWidth}"
                        Height="{StaticResource WideGridViewItemHeight}"
                        CanPlay="{x:Bind IsFile}"
                        Caption="{x:Bind local:FolderViewPage.GetCaptionText(IsFile, CaptionText, ItemCount), Mode=OneWay}"
                        IsPlaying="{Binding Media.IsPlaying, FallbackValue=False}"
                        ThumbnailHeight="{StaticResource WideGridViewItemThumbnailHeight}"
                        ThumbnailSource="{x:Bind Media.Thumbnail, Mode=OneWay, FallbackValue={x:Null}}">
                        <controls:CommonGridViewItem.PlaceholderIconSource>
                            <FontIconSource FontSize="{StaticResource PlaceholderGridItemIconFontSizeSmall}" Glyph="{x:Bind StorageItem, Converter={StaticResource MediaGlyphConverter}}" />
                        </controls:CommonGridViewItem.PlaceholderIconSource>
                    </controls:CommonGridViewItem>
                </DataTemplate>
            </GridView.ItemTemplate>
            <GridView.Footer>
                <Border Height="{x:Bind Common.FooterBottomPaddingHeight, Mode=OneWay}" />
            </GridView.Footer>
            <interactivity:Interaction.Behaviors>
                <interactions:AutoFocusBehavior />
                <interactions:ListViewContextTriggerBehavior ContextRequested="FolderView_OnItemContextRequested" Flyout="{x:Bind ItemFlyout}" />
                <interactions:BringIntoViewWithOffsetBehavior FromBottom="{x:Bind Common.FooterBottomPaddingHeight, Mode=OneWay}" />
                <interactions:ThumbnailGridViewBehavior />
            </interactivity:Interaction.Behaviors>
        </GridView>

        <!--  Empty content  -->
        <TextBlock
            x:Name="NoContentText"
            Grid.Row="2"
            Margin="{StaticResource PageContentMargin}"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Text="{strings:Resources Key=EmptyFolder}"
            Visibility="{x:Bind ViewModel.IsEmpty, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="NavigationViewStates">
                <VisualState x:Name="Expanded" />
                <VisualState x:Name="Compact" />
                <VisualState x:Name="Minimal">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind Common.NavigationViewDisplayMode, Mode=OneWay}">
                            <triggers:IsEqualStateTrigger.To>
                                <muxc:NavigationViewDisplayMode>Minimal</muxc:NavigationViewDisplayMode>
                            </triggers:IsEqualStateTrigger.To>
                        </triggers:IsEqualStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitleText.Padding" Value="{StaticResource PageContentMarginMinimal}" />
                        <Setter Target="BreadcrumbBar.Margin" Value="{StaticResource PageContentMarginMinimal}" />
                        <Setter Target="FolderView.Padding" Value="{StaticResource PageThumbnailMarginMinimal}" />
                        <Setter Target="NoContentText.Margin" Value="{StaticResource PageContentMarginMinimal}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
