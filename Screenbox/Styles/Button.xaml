<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedVisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <StaticResource x:Key="SubtleButtonBackground" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="SubtleButtonBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="SubtleButtonBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="SubtleButtonBackgroundDisabled" ResourceKey="SubtleFillColorDisabledBrush" />
            <StaticResource x:Key="SubtleButtonForeground" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="SubtleButtonForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="SubtleButtonForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="SubtleButtonForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrush" ResourceKey="ControlFillColorTransparentBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrushPointerOver" ResourceKey="ControlFillColorTransparentBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrushPressed" ResourceKey="ControlFillColorTransparentBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrushDisabled" ResourceKey="ControlFillColorTransparentBrush" />

            <StaticResource x:Key="SplitButtonBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
            <StaticResource x:Key="SplitButtonForegroundCheckedDisabled" ResourceKey="TextOnAccentFillColorDisabledBrush" />
            <!--  Identical, except for high contrast  -->
            <StaticResource x:Key="SplitButtonBackgroundCheckedDisabled" ResourceKey="AccentFillColorDisabledBrush" />
            <StaticResource x:Key="SplitButtonForegroundCheckedPressed" ResourceKey="TextOnAccentFillColorSecondaryBrush" />
            <StaticResource x:Key="SplitButtonBorderBrushChecked" ResourceKey="AccentControlElevationBorderBrush" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <StaticResource x:Key="SubtleButtonBackground" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="SubtleButtonBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="SubtleButtonBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="SubtleButtonBackgroundDisabled" ResourceKey="SubtleFillColorDisabledBrush" />
            <StaticResource x:Key="SubtleButtonForeground" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="SubtleButtonForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="SubtleButtonForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="SubtleButtonForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrush" ResourceKey="ControlFillColorTransparentBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrushPointerOver" ResourceKey="ControlFillColorTransparentBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrushPressed" ResourceKey="ControlFillColorTransparentBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrushDisabled" ResourceKey="ControlFillColorTransparentBrush" />

            <StaticResource x:Key="SplitButtonBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush" />
            <StaticResource x:Key="SplitButtonForegroundCheckedDisabled" ResourceKey="TextOnAccentFillColorDisabledBrush" />
            <!--  Identical, except for high contrast  -->
            <StaticResource x:Key="SplitButtonBackgroundCheckedDisabled" ResourceKey="AccentFillColorDisabledBrush" />
            <StaticResource x:Key="SplitButtonForegroundCheckedPressed" ResourceKey="TextOnAccentFillColorSecondaryBrush" />
            <StaticResource x:Key="SplitButtonBorderBrushChecked" ResourceKey="AccentControlElevationBorderBrush" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <StaticResource x:Key="SubtleButtonBackground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="SubtleButtonBackgroundPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="SubtleButtonBackgroundPressed" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="SubtleButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="SubtleButtonForeground" ResourceKey="SystemColorButtonTextColorBrush" />
            <StaticResource x:Key="SubtleButtonForegroundPointerOver" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="SubtleButtonForegroundPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="SubtleButtonForegroundDisabled" ResourceKey="SystemColorGrayTextColorBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrushPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrushPressed" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="SubtleButtonBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />

            <!--  Override brushes to match the default/accent button  -->
            <StaticResource x:Key="SplitButtonBorderBrushPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="SplitButtonForegroundCheckedDisabled" ResourceKey="SystemColorGrayTextColorBrush" />
            <StaticResource x:Key="SplitButtonBackgroundCheckedDisabled" ResourceKey="SystemColorWindowColorBrush" />
            <StaticResource x:Key="SplitButtonForegroundCheckedPressed" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="SplitButtonBorderBrushChecked" ResourceKey="SystemColorHighlightColorBrush" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <!--  This negative margin makes the link visually line up with the content  -->
    <Thickness x:Key="HyperlinkButtonInlineMargin">-12,0,0,0</Thickness>
    <!--  Uniform padding to ensure the text baseline aligns with TextBlocks (Caption) that have centered vertical alignment  -->
    <Thickness x:Key="HyperlinkButtonUniformPadding">11,6.75,11,6.75</Thickness>

    <!--  Margin to vertically center an icon within a button with default padding, ensures the height remains consistent even when it contains only an icon  -->
    <Thickness x:Key="IconButtonStandardIconMargin">0,1.95,0,0.9</Thickness>

    <!--  Subtle Button according to the Windows UI 3 design guidelines  -->
    <!--  https://github.com/microsoft/microsoft-ui-xaml/blob/v2.8.6/dev/CommonStyles/Button_themeresources.xaml  -->
    <Style x:Key="SubtleButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource SubtleButtonBackground}" />
        <!--<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />-->
        <Setter Property="Foreground" Value="{ThemeResource SubtleButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SubtleButtonBorderBrush}" />
        <!--<Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />-->
        <!--<Setter Property="Padding" Value="{StaticResource ButtonPadding}" />-->
        <!--<Setter Property="HorizontalAlignment" Value="Left" />-->
        <!--<Setter Property="VerticalAlignment" Value="Center" />-->
        <!--<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />-->
        <!--<Setter Property="FontWeight" Value="Normal" />-->
        <!--<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />-->
        <!--<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />-->
        <!--<Setter Property="FocusVisualMargin" Value="-3" />-->
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter
                        x:Name="ContentPresenter"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}"
                        contract7Present:BackgroundSizing="{TemplateBinding BackgroundSizing}"
                        contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                        muxc:AnimatedIcon.State="Normal"
                        AutomationProperties.AccessibilityView="Raw"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTransitions="{TemplateBinding ContentTransitions}"
                        Foreground="{TemplateBinding Foreground}">
                        <contract7Present:ContentPresenter.BackgroundTransition>
                            <contract7Present:BrushTransition Duration="0:0:0.083" />
                        </contract7Present:ContentPresenter.BackgroundTransition>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
                                        <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="Normal" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="PlayerButtonStyle"
        BasedOn="{StaticResource SubtleButtonStyle}"
        TargetType="Button">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Padding" Value="0" />
    </Style>
    <Style
        x:Key="SmallPlayerButtonStyle"
        BasedOn="{StaticResource SubtleButtonStyle}"
        TargetType="Button">
        <Setter Property="Width" Value="36" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <!--  Subtle ToggleButton according to the Windows UI 3 design guidelines, except for the checked states where the subtle resources were applied  -->
    <!--  https://github.com/microsoft/microsoft-ui-xaml/blob/v2.8.6/dev/CommonStyles/ToggleButton_themeresources.xaml  -->
    <Style x:Key="SubtleToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{ThemeResource SubtleButtonBackground}" />
        <!--<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />-->
        <Setter Property="Foreground" Value="{ThemeResource SubtleButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SubtleButtonBorderBrush}" />
        <!--<Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}" />-->
        <!--<Setter Property="Padding" Value="{StaticResource ButtonPadding}" />-->
        <!--<Setter Property="HorizontalAlignment" Value="Left" />-->
        <!--<Setter Property="VerticalAlignment" Value="Center" />-->
        <!--<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />-->
        <!--<Setter Property="FontWeight" Value="Normal" />-->
        <!--<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />-->
        <!--<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />-->
        <!--<Setter Property="FocusVisualMargin" Value="-3" />-->
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <ContentPresenter
                        x:Name="ContentPresenter"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}"
                        contract7Present:BackgroundSizing="{TemplateBinding BackgroundSizing}"
                        contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                        AutomationProperties.AccessibilityView="Raw"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTransitions="{TemplateBinding ContentTransitions}"
                        Foreground="{TemplateBinding Foreground}">
                        <contract7Present:ContentPresenter.BackgroundTransition>
                            <contract7Present:BrushTransition Duration="0:0:0.083" />
                        </contract7Present:ContentPresenter.BackgroundTransition>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<contract7Present:ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BackgroundSizing">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />
                                        </contract7Present:ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="CheckedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<contract7Present:ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BackgroundSizing">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />
                                        </contract7Present:ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="CheckedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<contract7Present:ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BackgroundSizing">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />
                                        </contract7Present:ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="CheckedDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="IndeterminatePointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="IndeterminatePressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="IndeterminateDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBorderBrushDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="PlayerToggleButtonStyle"
        BasedOn="{StaticResource SubtleToggleButtonStyle}"
        TargetType="ToggleButton">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Padding" Value="0" />
    </Style>
    <Style
        x:Key="SmallPlayerToggleButtonStyle"
        BasedOn="{StaticResource SubtleToggleButtonStyle}"
        TargetType="ToggleButton">
        <Setter Property="Width" Value="36" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style BasedOn="{StaticResource DefaultSplitButtonStyle}" TargetType="muxc:SplitButton" />

    <!--  SplitButton according to the Windows UI design guidelines  -->
    <!--  https://github.com/microsoft/microsoft-ui-xaml/blob/v2.8.6/dev/SplitButton/SplitButton.xaml  -->
    <Style x:Key="DefaultSplitButtonStyle" TargetType="muxc:SplitButton">
        <!--<Setter Property="Background" Value="{ThemeResource SplitButtonBackground}" />-->
        <!--<Setter Property="Foreground" Value="{ThemeResource SplitButtonForeground}" />-->
        <!--<Setter Property="BorderBrush" Value="{ThemeResource SplitButtonBorderBrush}" />-->
        <!--<Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />-->
        <!--<Setter Property="HorizontalAlignment" Value="Left" />-->
        <!--<Setter Property="VerticalAlignment" Value="Center" />-->
        <!--<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />-->
        <!--<Setter Property="FontWeight" Value="Normal" />-->
        <!--<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />-->
        <!--<Setter Property="UseSystemFocusVisuals" Value="True" />-->
        <Setter Property="FocusVisualMargin" Value="-3" />
        <!--<Setter Property="IsTabStop" Value="True" />-->
        <!--<Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />-->
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="muxc:SplitButton">
                    <Grid
                        x:Name="RootGrid"
                        contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}"
                        contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                        Background="Transparent">
                        <Grid.Resources>
                            <!--  Override the style of the inner buttons so that they don't affect background/foreground/border colors  -->
                            <Style TargetType="Button">
                                <Setter Property="Foreground" Value="{ThemeResource SplitButtonForeground}" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                                <Setter Property="FocusVisualMargin" Value="-3" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid x:Name="RootGrid" Background="Transparent">
                                                <ContentPresenter
                                                    x:Name="ContentPresenter"
                                                    Padding="{TemplateBinding Padding}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    muxc:AnimatedIcon.State="Normal"
                                                    AutomationProperties.AccessibilityView="Raw"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    ContentTransitions="{TemplateBinding ContentTransitions}" />

                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="PointerOver">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="PointerOver" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="Pressed" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SplitButtonForegroundDisabled}" />
                                                                <Setter Target="RootGrid.Background" Value="{ThemeResource SplitButtonBackgroundDisabled}" />
                                                                <Setter Target="ContentPresenter.BorderBrush" Value="Transparent" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                x:Name="PrimaryButtonColumn"
                                Width="*"
                                MinWidth="{ThemeResource SplitButtonPrimaryButtonSize}" />
                            <ColumnDefinition x:Name="Separator" Width="1" />
                            <ColumnDefinition x:Name="SecondaryButtonColumn" Width="{ThemeResource SplitButtonSecondaryButtonSize}" />
                        </Grid.ColumnDefinitions>

                        <!--  Add border thickness and corner radius to prevent the background from overlapping the border  -->
                        <Grid
                            x:Name="PrimaryBackgroundGrid"
                            Grid.ColumnSpan="2"
                            contract7NotPresent:CornerRadius="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource LeftCornerRadiusFilterConverter}}"
                            contract7Present:CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftCornerRadiusFilterConverter}}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomLeftThicknessFilterConverter}}">
                            <!--  Add brush transition to match the default button  -->
                            <contract7Present:Grid.BackgroundTransition>
                                <contract7Present:BrushTransition Duration="0:0:0.083" />
                            </contract7Present:Grid.BackgroundTransition>
                        </Grid>

                        <!--  Add border thickness to prevent the background from overlapping the border  -->
                        <Grid
                            x:Name="DividerBackgroundGrid"
                            Grid.Column="1"
                            Width="1"
                            Background="{ThemeResource SplitButtonBorderBrushDivider}"
                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomThicknessFilterConverter}}">
                            <!--  Add a brush transition to match the default button  -->
                            <contract7Present:Grid.BackgroundTransition>
                                <contract7Present:BrushTransition Duration="0:0:0.083" />
                            </contract7Present:Grid.BackgroundTransition>
                        </Grid>

                        <!--  Add border thickness and corner radius to prevent the background from overlapping the border  -->
                        <Grid
                            x:Name="SecondaryBackgroundGrid"
                            Grid.Column="2"
                            contract7NotPresent:CornerRadius="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                            contract7Present:CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomRightThicknessFilterConverter}}">
                            <!--  Add a brush transition to match the default button  -->
                            <contract7Present:Grid.BackgroundTransition>
                                <contract7Present:BrushTransition Duration="0:0:0.083" />
                            </contract7Present:Grid.BackgroundTransition>
                        </Grid>

                        <!--  Override border thickness to match the height of the default button  -->
                        <Button
                            x:Name="PrimaryButton"
                            Grid.Column="0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            IsTabStop="False" />

                        <Button
                            x:Name="SecondaryButton"
                            Grid.Column="2"
                            Padding="0,0,12,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Foreground="{ThemeResource SplitButtonForegroundSecondary}"
                            IsTabStop="False">
                            <Button.Content>
                                <muxc:AnimatedIcon
                                    Width="12"
                                    Height="12"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw">
                                    <animatedVisuals:AnimatedChevronDownSmallVisualSource />
                                    <muxc:AnimatedIcon.FallbackIconSource>
                                        <muxc:FontIconSource
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            FontSize="8"
                                            Glyph="&#xE96E;"
                                            IsTextScaleFactorEnabled="False" />
                                    </muxc:AnimatedIcon.FallbackIconSource>
                                </muxc:AnimatedIcon>
                            </Button.Content>
                        </Button>

                        <Grid
                            x:Name="Border"
                            Grid.ColumnSpan="3"
                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushDisabled}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="Transparent" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="Transparent" />
                                        <Setter Target="RootGrid.Background" Value="Transparent" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="FlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="TouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPointerOver}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <!--  Add a border to match default button style in high contrast  -->
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <!--  Add a unique border to each part  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ControlFillColorTransparentBrush}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPointerOver}" />
                                        <!--  Brush not in use  -->
                                        <!--<Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />-->
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPointerOver}" />
                                        <!--  Add a border to match default button style in high contrast  -->
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}" />
                                        <!--  Add a unique border to each part  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ControlFillColorTransparentBrush}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="0" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedFlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="0" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedTouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="0" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="0" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="0" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="0" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="{ThemeResource ToggleButtonCheckedStateBackgroundSizing}" />-->
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="0" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SecondaryButtonPlacementStates">
                                <VisualState x:Name="SecondaryButtonRight" />

                                <VisualState x:Name="SecondaryButtonSpan">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryButton.(Grid.Column)" Value="0" />
                                        <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="3" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Accent SplitButton, swapped non-checked brushes with checked brushes, and increased the focus visual margin  -->
    <!--  https://github.com/microsoft/microsoft-ui-xaml/blob/v2.8.6/dev/SplitButton/SplitButton.xaml  -->
    <Style x:Key="AccentSplitButtonStyle" TargetType="muxc:SplitButton">
        <Setter Property="Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
        <Setter Property="Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
        <!--<Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />-->
        <!--<Setter Property="HorizontalAlignment" Value="Left" />-->
        <!--<Setter Property="VerticalAlignment" Value="Center" />-->
        <!--<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />-->
        <!--<Setter Property="FontWeight" Value="Normal" />-->
        <!--<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />-->
        <!--<Setter Property="UseSystemFocusVisuals" Value="True" />-->
        <Setter Property="FocusVisualMargin" Value="-3" />
        <!--<Setter Property="IsTabStop" Value="True" />-->
        <!--<Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />-->
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="muxc:SplitButton">
                    <Grid
                        x:Name="RootGrid"
                        contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}"
                        contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                        Background="Transparent">
                        <Grid.Resources>
                            <!--  Override the style of the inner buttons so that they don't affect background/foreground/border colors  -->
                            <Style TargetType="Button">
                                <Setter Property="Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                                <Setter Property="FocusVisualMargin" Value="-3" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid x:Name="RootGrid" Background="Transparent">
                                                <ContentPresenter
                                                    x:Name="ContentPresenter"
                                                    Padding="{TemplateBinding Padding}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    muxc:AnimatedIcon.State="Normal"
                                                    AutomationProperties.AccessibilityView="Raw"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    ContentTransitions="{TemplateBinding ContentTransitions}" />

                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="PointerOver">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="PointerOver" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="Pressed" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedDisabled}" />
                                                                <Setter Target="RootGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedDisabled}" />
                                                                <Setter Target="ContentPresenter.BorderBrush" Value="Transparent" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                x:Name="PrimaryButtonColumn"
                                Width="*"
                                MinWidth="{ThemeResource SplitButtonPrimaryButtonSize}" />
                            <ColumnDefinition x:Name="Separator" Width="1" />
                            <ColumnDefinition x:Name="SecondaryButtonColumn" Width="{ThemeResource SplitButtonSecondaryButtonSize}" />
                        </Grid.ColumnDefinitions>

                        <!--  Add corner radius to prevent the background from overlapping the border when in checked states  -->
                        <Grid
                            x:Name="PrimaryBackgroundGrid"
                            Grid.ColumnSpan="2"
                            contract7NotPresent:CornerRadius="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource LeftCornerRadiusFilterConverter}}"
                            contract7Present:CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftCornerRadiusFilterConverter}}"
                            Background="{TemplateBinding Background}">
                            <!--  Add a brush transition to match the accent button  -->
                            <contract7Present:Grid.BackgroundTransition>
                                <contract7Present:BrushTransition Duration="0:0:0.083" />
                            </contract7Present:Grid.BackgroundTransition>
                        </Grid>

                        <!--  Add border thickness to prevent the background from overlapping the border  -->
                        <Grid
                            x:Name="DividerBackgroundGrid"
                            Grid.Column="1"
                            Width="1"
                            Background="{ThemeResource SplitButtonBorderBrushCheckedDivider}"
                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomThicknessFilterConverter}}">
                            <!--  Add a brush transition to match the accent button  -->
                            <contract7Present:Grid.BackgroundTransition>
                                <contract7Present:BrushTransition Duration="0:0:0.083" />
                            </contract7Present:Grid.BackgroundTransition>
                        </Grid>

                        <!--  Add corner radius to prevent the background from overlapping the border when in checked states  -->
                        <Grid
                            x:Name="SecondaryBackgroundGrid"
                            Grid.Column="2"
                            contract7NotPresent:CornerRadius="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                            contract7Present:CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                            Background="{TemplateBinding Background}">
                            <!--  Add a brush transition to match the accent button  -->
                            <contract7Present:Grid.BackgroundTransition>
                                <contract7Present:BrushTransition Duration="0:0:0.083" />
                            </contract7Present:Grid.BackgroundTransition>
                        </Grid>

                        <!--  Override border thickness to match the height of the accent button  -->
                        <Button
                            x:Name="PrimaryButton"
                            Grid.Column="0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            IsTabStop="False" />

                        <Button
                            x:Name="SecondaryButton"
                            Grid.Column="2"
                            Padding="0,0,12,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Foreground="{ThemeResource SplitButtonForegroundChecked}"
                            IsTabStop="False">
                            <Button.Content>
                                <muxc:AnimatedIcon
                                    Width="12"
                                    Height="12"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw">
                                    <animatedVisuals:AnimatedChevronDownSmallVisualSource />
                                    <muxc:AnimatedIcon.FallbackIconSource>
                                        <muxc:FontIconSource
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            FontSize="8"
                                            Glyph="&#xE96E;"
                                            IsTextScaleFactorEnabled="False" />
                                    </muxc:AnimatedIcon.FallbackIconSource>
                                </muxc:AnimatedIcon>
                            </Button.Content>
                        </Button>

                        <Grid
                            x:Name="Border"
                            Grid.ColumnSpan="3"
                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedDisabled}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="Transparent" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="Transparent" />
                                        <Setter Target="RootGrid.Background" Value="Transparent" />
                                        <Setter Target="DividerBackgroundGrid.BorderThickness" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="FlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="TouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                        <!--  Brush not in use  -->
                                        <!--<Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPointerOver}" />-->
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrush}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForeground}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondary}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushDivider}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomLeftThicknessFilterConverter}}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomRightThicknessFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedFlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushDivider}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomLeftThicknessFilterConverter}}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomRightThicknessFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedTouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushDivider}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomLeftThicknessFilterConverter}}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomRightThicknessFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrush}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPointerOver}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondary}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushDivider}" />
                                        <!--  Add a border to match default button style in high contrast  -->
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomLeftThicknessFilterConverter}}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomRightThicknessFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrush}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondary}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushDivider}" />
                                        <!--  Add a unique border to each part  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ControlFillColorTransparentBrush}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomLeftThicknessFilterConverter}}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomRightThicknessFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrush}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForeground}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPointerOver}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPointerOver}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushDivider}" />
                                        <!--  Add a border to match default button style in high contrast  -->
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomLeftThicknessFilterConverter}}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomRightThicknessFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrush}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <!--<contract7Present:Setter Target="PrimaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForeground}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <!--<contract7Present:Setter Target="SecondaryBackgroundGrid.BackgroundSizing" Value="InnerBorderEdge" />-->
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushDivider}" />
                                        <!--  Add a unique border to each part  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ControlFillColorTransparentBrush}" />
                                        <!--  Work around for the background sizing issue, microsoft/microsoft-ui-xaml#6885  -->
                                        <Setter Target="PrimaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomLeftThicknessFilterConverter}}" />
                                        <Setter Target="SecondaryBackgroundGrid.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopBottomRightThicknessFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SecondaryButtonPlacementStates">
                                <VisualState x:Name="SecondaryButtonRight" />

                                <VisualState x:Name="SecondaryButtonSpan">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryButton.(Grid.Column)" Value="0" />
                                        <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="3" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
