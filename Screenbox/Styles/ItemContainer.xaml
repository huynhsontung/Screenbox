<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:contract13NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,13)"
    xmlns:contract13Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,13)"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:extensions="using:Screenbox.Extensions">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <!--  Use opacity rather than a foreground brush so that it doesn't override the GridViewItem/ListViewItem foreground brushes  -->
            <x:Double x:Key="TextFillColorSecondaryOpacity">0.775</x:Double>
            <x:Double x:Key="TextFillColorTertiaryOpacity">0.53</x:Double>

            <StaticResource x:Key="MediaGridViewItemBackgroundPointerOver" ResourceKey="ControlFillColorDefaultBrush" />
            <StaticResource x:Key="MediaGridViewItemBackgroundPressed" ResourceKey="ControlAltFillColorTertiaryBrush" />
            <StaticResource x:Key="MediaGridViewItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="MediaGridViewItemBorderBrushPointerOver" ResourceKey="CardStrokeColorDefaultSolidBrush" />

            <StaticResource x:Key="MediaListViewHeaderItemBackground" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemForeground" ResourceKey="AccentTextFillColorPrimaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemForegroundPointerOver" ResourceKey="AccentTextFillColorSecondaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemForegroundPressed" ResourceKey="AccentTextFillColorTertiaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBorderBrush" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBorderBrushPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBorderBrushPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <x:Double x:Key="TextFillColorSecondaryOpacity">0.695</x:Double>
            <x:Double x:Key="TextFillColorTertiaryOpacity">0.5</x:Double>

            <StaticResource x:Key="MediaGridViewItemBackgroundPointerOver" ResourceKey="ControlFillColorDefaultBrush" />
            <StaticResource x:Key="MediaGridViewItemBackgroundPressed" ResourceKey="LayerFillColorDefaultBrush" />
            <StaticResource x:Key="MediaGridViewItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="MediaGridViewItemBorderBrushPointerOver" ResourceKey="ControlStrokeColorSecondaryBrush" />

            <StaticResource x:Key="MediaListViewHeaderItemBackground" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemForeground" ResourceKey="AccentTextFillColorPrimaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemForegroundPointerOver" ResourceKey="AccentTextFillColorSecondaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemForegroundPressed" ResourceKey="AccentTextFillColorTertiaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBorderBrushPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBorderBrushPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <x:Double x:Key="TextFillColorSecondaryOpacity">1</x:Double>
            <x:Double x:Key="TextFillColorTertiaryOpacity">1</x:Double>

            <StaticResource x:Key="MediaGridViewItemBackgroundPointerOver" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="MediaGridViewItemBackgroundPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="MediaGridViewItemForegroundPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="MediaGridViewItemBorderBrushPointerOver" ResourceKey="SystemColorHighlightColorBrush" />

            <StaticResource x:Key="MediaListViewHeaderItemBackground" ResourceKey="SystemColorButtonFaceColorBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBackgroundPointerOver" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBackgroundPressed" ResourceKey="SystemColorHighlightTextColorBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemForeground" ResourceKey="SystemColorButtonTextColorBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemForegroundPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemForegroundPressed" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBorderBrush" ResourceKey="SystemColorButtonFaceColorBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBorderBrushPointerOver" ResourceKey="SystemColorHighlightColorBrush" />
            <StaticResource x:Key="MediaListViewHeaderItemBorderBrushPressed" ResourceKey="SystemColorButtonFaceColorBrush" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <CornerRadius x:Key="MediaItemCornerRadius">8,8,8,8</CornerRadius>
    <x:Double x:Key="GridViewItemPressedScale">0.95</x:Double>

    <!--  GridViewItem featuring a Pressed ScaleTransform animation and a custom PointerOver foreground brush  -->
    <!--  https://github.com/microsoft/microsoft-ui-xaml/blob/v2.8.6/dev/CommonStyles/GridViewItem_themeresources.xaml  -->
    <contract13NotPresent:Style
        x:Key="GridViewItemMediaCardStyle"
        BasedOn="{StaticResource DefaultGridViewItemStyle}"
        TargetType="GridViewItem">
        <!--<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />-->
        <!--<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />-->
        <!--<Setter Property="Background" Value="{ThemeResource GridViewItemBackground}" />-->
        <!--<Setter Property="Foreground" Value="{ThemeResource GridViewItemForeground}" />-->
        <!--<Setter Property="TabNavigation" Value="Local" />-->
        <!--<Setter Property="IsHoldingEnabled" Value="True" />-->
        <!--<Setter Property="HorizontalContentAlignment" Value="Center" />-->
        <!--<Setter Property="VerticalContentAlignment" Value="Center" />-->
        <!--<Setter Property="Margin" Value="0,0,4,4" />-->
        <!--<Setter Property="MinWidth" Value="{ThemeResource GridViewItemMinWidth}" />-->
        <!--<Setter Property="MinHeight" Value="{ThemeResource GridViewItemMinHeight}" />-->
        <!--<Setter Property="AllowDrop" Value="False" />-->
        <!--<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />-->
        <!--<Setter Property="FocusVisualMargin" Value="-2" />-->
        <!--<Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource GridViewItemFocusVisualPrimaryBrush}" />-->
        <!--<Setter Property="FocusVisualPrimaryThickness" Value="2" />-->
        <!--<Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource GridViewItemFocusVisualSecondaryBrush}" />-->
        <!--<Setter Property="FocusVisualSecondaryThickness" Value="1" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewItem">
                    <ListViewItemPresenter
                        x:Name="Root"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        CheckBoxBrush="{ThemeResource GridViewItemCheckBoxBrush}"
                        CheckBrush="{ThemeResource GridViewItemCheckBrush}"
                        CheckMode="{ThemeResource GridViewItemCheckMode}"
                        ContentMargin="{TemplateBinding Padding}"
                        ContentTransitions="{TemplateBinding ContentTransitions}"
                        Control.IsTemplateFocusTarget="True"
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                        DragBackground="{ThemeResource GridViewItemDragBackground}"
                        DragForeground="{ThemeResource GridViewItemDragForeground}"
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                        FocusBorderBrush="{ThemeResource GridViewItemFocusBorderBrush}"
                        FocusSecondaryBorderBrush="{ThemeResource GridViewItemFocusSecondaryBorderBrush}"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        PlaceholderBackground="{ThemeResource GridViewItemPlaceholderBackground}"
                        PointerOverBackground="{ThemeResource GridViewItemBackgroundPointerOver}"
                        PointerOverForeground="{ThemeResource MediaGridViewItemForegroundPointerOver}"
                        PressedBackground="{ThemeResource GridViewItemBackgroundPressed}"
                        RenderTransformOrigin="0.5,0.5"
                        ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
                        SelectedBackground="{ThemeResource GridViewItemBackgroundSelected}"
                        SelectedForeground="{ThemeResource GridViewItemForegroundSelected}"
                        SelectedPointerOverBackground="{ThemeResource GridViewItemBackgroundSelectedPointerOver}"
                        SelectedPressedBackground="{ThemeResource GridViewItemBackgroundSelectedPressed}"
                        SelectionCheckMarkVisualEnabled="{ThemeResource GridViewItemSelectionCheckMarkVisualEnabled}">
                        <ListViewItemPresenter.RenderTransform>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                        </ListViewItemPresenter.RenderTransform>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="ScaleTransform.ScaleX" Value="{StaticResource GridViewItemPressedScale}" />
                                        <Setter Target="ScaleTransform.ScaleY" Value="{StaticResource GridViewItemPressedScale}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="PointerOverSelected" />

                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="ScaleTransform.ScaleX" Value="{StaticResource GridViewItemPressedScale}" />
                                        <Setter Target="ScaleTransform.ScaleY" Value="{StaticResource GridViewItemPressedScale}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="{StaticResource GridViewItemPressedScale}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="{StaticResource GridViewItemPressedScale}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition To="PressedSelected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="{StaticResource GridViewItemPressedScale}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="{StaticResource GridViewItemPressedScale}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ListViewItemPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </contract13NotPresent:Style>
    <!--  GridViewItem featuring a Pressed ScaleTransform animation, increased corner radius, custom PointerOver Border/Foreground/Background brush and custom Pressed Background brush  -->
    <!--  https://github.com/microsoft/microsoft-ui-xaml/blob/v2.8.6/dev/CommonStyles/GridViewItem_themeresources_21h1.xaml  -->
    <contract13Present:Style
        x:Key="GridViewItemMediaCardStyle"
        BasedOn="{StaticResource DefaultGridViewItemStyle}"
        TargetType="GridViewItem">
        <!--<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />-->
        <!--<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />-->
        <!--<Setter Property="Background" Value="{ThemeResource GridViewItemBackground}" />-->
        <!--<Setter Property="Foreground" Value="{ThemeResource GridViewItemForeground}" />-->
        <!--<Setter Property="TabNavigation" Value="Local" />-->
        <!--<Setter Property="IsHoldingEnabled" Value="True" />-->
        <!--<Setter Property="HorizontalContentAlignment" Value="Center" />-->
        <!--<Setter Property="VerticalContentAlignment" Value="Center" />-->
        <!--<Setter Property="Margin" Value="0,0,4,4" />-->
        <!--<Setter Property="MinWidth" Value="{ThemeResource GridViewItemMinWidth}" />-->
        <!--<Setter Property="MinHeight" Value="{ThemeResource GridViewItemMinHeight}" />-->
        <!--<Setter Property="AllowDrop" Value="True" />-->
        <!--<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />-->
        <!--<Setter Property="FocusVisualMargin" Value="-3" />-->
        <!--<Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource GridViewItemFocusVisualPrimaryBrush}" />-->
        <!--<Setter Property="FocusVisualPrimaryThickness" Value="2" />-->
        <!--<Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource GridViewItemFocusVisualSecondaryBrush}" />-->
        <!--<Setter Property="FocusVisualSecondaryThickness" Value="1" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewItem">
                    <ListViewItemPresenter
                        x:Name="Root"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        CheckBoxBorderBrush="{ThemeResource GridViewItemCheckBoxBorderBrush}"
                        CheckBoxBrush="{ThemeResource GridViewItemCheckBoxBrush}"
                        CheckBoxCornerRadius="{ThemeResource GridViewItemCheckBoxCornerRadius}"
                        CheckBoxDisabledBorderBrush="{ThemeResource GridViewItemCheckBoxDisabledBorderBrush}"
                        CheckBoxDisabledBrush="{ThemeResource GridViewItemCheckBoxDisabledBrush}"
                        CheckBoxPointerOverBorderBrush="{ThemeResource GridViewItemCheckBoxPointerOverBorderBrush}"
                        CheckBoxPointerOverBrush="{ThemeResource GridViewItemCheckBoxPointerOverBrush}"
                        CheckBoxPressedBorderBrush="{ThemeResource GridViewItemCheckBoxPressedBorderBrush}"
                        CheckBoxPressedBrush="{ThemeResource GridViewItemCheckBoxPressedBrush}"
                        CheckBoxSelectedBrush="{ThemeResource GridViewItemCheckBoxSelectedBrush}"
                        CheckBoxSelectedDisabledBrush="{ThemeResource GridViewItemCheckBoxSelectedDisabledBrush}"
                        CheckBoxSelectedPointerOverBrush="{ThemeResource GridViewItemCheckBoxSelectedPointerOverBrush}"
                        CheckBoxSelectedPressedBrush="{ThemeResource GridViewItemCheckBoxSelectedPressedBrush}"
                        CheckBrush="{ThemeResource GridViewItemCheckBrush}"
                        CheckDisabledBrush="{ThemeResource GridViewItemCheckDisabledBrush}"
                        CheckMode="{ThemeResource GridViewItemCheckMode}"
                        CheckPressedBrush="{ThemeResource GridViewItemCheckPressedBrush}"
                        ContentMargin="{TemplateBinding Padding}"
                        ContentTransitions="{TemplateBinding ContentTransitions}"
                        Control.IsTemplateFocusTarget="True"
                        CornerRadius="{ThemeResource MediaItemCornerRadius}"
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                        DragBackground="{ThemeResource GridViewItemDragBackground}"
                        DragForeground="{ThemeResource GridViewItemDragForeground}"
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                        FocusBorderBrush="{ThemeResource GridViewItemFocusBorderBrush}"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                        FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                        FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                        FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                        PlaceholderBackground="{ThemeResource GridViewItemPlaceholderBackground}"
                        PointerOverBackground="{ThemeResource MediaGridViewItemBackgroundPointerOver}"
                        PointerOverBorderBrush="{ThemeResource MediaGridViewItemBorderBrushPointerOver}"
                        PointerOverForeground="{ThemeResource MediaGridViewItemForegroundPointerOver}"
                        PressedBackground="{ThemeResource MediaGridViewItemBackgroundPressed}"
                        RenderTransformOrigin="0.5,0.5"
                        ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
                        SelectedBackground="{ThemeResource GridViewItemBackgroundSelected}"
                        SelectedBorderBrush="{ThemeResource GridViewItemSelectedBorderBrush}"
                        SelectedBorderThickness="{ThemeResource GridViewItemSelectedBorderThickness}"
                        SelectedDisabledBackground="{ThemeResource GridViewItemBackgroundSelectedDisabled}"
                        SelectedDisabledBorderBrush="{ThemeResource GridViewItemSelectedDisabledBorderBrush}"
                        SelectedForeground="{ThemeResource GridViewItemForegroundSelected}"
                        SelectedInnerBorderBrush="{ThemeResource GridViewItemSelectedInnerBorderBrush}"
                        SelectedPointerOverBackground="{ThemeResource GridViewItemBackgroundSelectedPointerOver}"
                        SelectedPointerOverBorderBrush="{ThemeResource GridViewItemSelectedPointerOverBorderBrush}"
                        SelectedPressedBackground="{ThemeResource GridViewItemBackgroundSelectedPressed}"
                        SelectedPressedBorderBrush="{ThemeResource GridViewItemSelectedPressedBorderBrush}"
                        SelectionCheckMarkVisualEnabled="{ThemeResource GridViewItemSelectionCheckMarkVisualEnabled}">
                        <ListViewItemPresenter.RenderTransform>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                        </ListViewItemPresenter.RenderTransform>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="ScaleTransform.ScaleX" Value="{StaticResource GridViewItemPressedScale}" />
                                        <Setter Target="ScaleTransform.ScaleY" Value="{StaticResource GridViewItemPressedScale}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="PointerOverSelected" />

                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="ScaleTransform.ScaleX" Value="{StaticResource GridViewItemPressedScale}" />
                                        <Setter Target="ScaleTransform.ScaleY" Value="{StaticResource GridViewItemPressedScale}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="{StaticResource GridViewItemPressedScale}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="{StaticResource GridViewItemPressedScale}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition To="PressedSelected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="{StaticResource GridViewItemPressedScale}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="{StaticResource ControlFastOutSlowInKeySpline}"
                                                    KeyTime="{StaticResource ControlFastAnimationDuration}"
                                                    Value="{StaticResource GridViewItemPressedScale}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ListViewItemPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </contract13Present:Style>

    <!--  ListView with increased item corner radii and no side margins  -->
    <Style x:Key="MediaListViewStyle" TargetType="ListView">
        <!--<Setter Property="extensions:ListViewExtensions.ItemMinHeight" Value="48" />-->
        <Setter Property="extensions:ListViewExtensions.ItemMargin" Value="0,2,0,2" />
        <Setter Property="extensions:ListViewExtensions.ItemCornerRadius" Value="{StaticResource MediaItemCornerRadius}" />
        <!--<Setter Property="extensions:ListViewExtensions.ItemIsFocusEngagementEnabled" Value="True" />-->
        <Setter Property="ItemContainerStyle" Value="{StaticResource MediaListViewItemStyle}" />
    </Style>

    <!--  ListViewItem with larger MinHeight and focus engagement requirement  -->
    <!--  https://learn.microsoft.com/en-us/windows/apps/design/input/gamepad-and-remote-interactions#focus-engagement  -->
    <contract13NotPresent:Style
        x:Key="MediaListViewItemStyle"
        BasedOn="{StaticResource DefaultListViewItemStyle}"
        TargetType="ListViewItem">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="IsFocusEngagementEnabled" Value="True" />
    </contract13NotPresent:Style>
    <contract13Present:Style
        x:Key="MediaListViewItemStyle"
        BasedOn="{StaticResource DefaultListViewItemStyle}"
        TargetType="ListViewItem">
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="IsFocusEngagementEnabled" Value="True" />
    </contract13Present:Style>

    <!--  GridViewHeaderItem with inline margin that resembles the subtle button, but with accent text and a larger corner radius  -->
    <Style x:Key="MediaGridViewHeaderItemStyle" TargetType="GridViewHeaderItem">
        <!--<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />-->
        <!--<Setter Property="FontSize" Value="{ThemeResource GridViewHeaderItemThemeFontSize}" />-->
        <Setter Property="Background" Value="{ThemeResource MediaListViewHeaderItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource MediaListViewHeaderItemForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource MediaListViewHeaderItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
        <Setter Property="CornerRadius" Value="{ThemeResource MediaItemCornerRadius}" />
        <Setter Property="Margin" Value="4,0,4,4" />
        <Setter Property="Padding" Value="11,6,11,7" />
        <!--<Setter Property="HorizontalContentAlignment" Value="Left" />-->
        <!--<Setter Property="VerticalContentAlignment" Value="Top" />-->
        <!--<Setter Property="MinHeight" Value="{ThemeResource GridViewHeaderItemMinHeight}" />-->
        <!--<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewHeaderItem">
                    <Grid
                        x:Name="RootGrid"
                        Background="{TemplateBinding Background}"
                        BackgroundSizing="{TemplateBinding BackgroundSizing}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Foreground="{TemplateBinding Foreground}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemBorderBrushPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemBorderBrushPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  ListViewHeaderItem that resembles the subtle button, but with accent text and a larger corner radius  -->
    <Style x:Key="MediaListViewHeaderItemStyle" TargetType="ListViewHeaderItem">
        <!--<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />-->
        <!--<Setter Property="FontSize" Value="{ThemeResource ListViewHeaderItemThemeFontSize}" />-->
        <Setter Property="Background" Value="{ThemeResource MediaListViewHeaderItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource MediaListViewHeaderItemForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource MediaListViewHeaderItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
        <Setter Property="CornerRadius" Value="{ThemeResource MediaItemCornerRadius}" />
        <!--<Setter Property="Margin" Value="0,0,0,4" />-->
        <Setter Property="Padding" Value="11,6,11,7" />
        <!--<Setter Property="HorizontalContentAlignment" Value="Left" />-->
        <!--<Setter Property="VerticalContentAlignment" Value="Top" />-->
        <!--<Setter Property="MinHeight" Value="{ThemeResource ListViewHeaderItemMinHeight}" />-->
        <!--<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewHeaderItem">
                    <Grid
                        x:Name="RootGrid"
                        Background="{TemplateBinding Background}"
                        BackgroundSizing="{TemplateBinding BackgroundSizing}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Foreground="{TemplateBinding Foreground}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemBorderBrushPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemBorderBrushPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MediaListViewHeaderItemForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
